修饰普通类型变量，表示变量不能被修改
const int a = 5;
a = 6; //错误，编译器报错，编译器会优化，即使使用指针指向a，通过指针修改a的值，也可能不变。


修饰函数内参数
void f(const int &a)
{
	
}

放在函数前，表示函数返回值不能作为左值被修改
const int f()
{
}

修饰类成员函数，表示不能改变成员函数,不能修饰静态成员函数，因为没有this指针
class Test
int get_cn() const
{
	return m_cn;
}
